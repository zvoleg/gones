package cpu6502

type instruction struct {
	opcode  uint8
	name    string
	am      func(*Cpu6502)
	handler func(*Cpu6502)
	clocks  uint
}

func inst(opcode uint8, name string, am func(*Cpu6502), handler func(*Cpu6502), clocks uint) instruction {
	return instruction{
		opcode,
		name,
		am,
		handler,
		clocks,
	}
}

var instructionTable []instruction = []instruction{
	inst(0x00, "BRK", imp, brk, 7), inst(0x01, "ORA", idx, ora, 6), inst(0x02, "XEP", imp, xep, 0), inst(0x03, "XEP", imp, xep, 0), inst(0x04, "XEP", imp, xep, 0), inst(0x05, "ORA", zp0, ora, 3), inst(0x06, "ASL", zp0, asl, 5), inst(0x07, "XEP", imp, xep, 0), inst(0x08, "PHP", imp, php, 3), inst(0x09, "ORA", imm, ora, 2), inst(0x0A, "ASL", acc, asl, 2), inst(0x0B, "XEP", imp, xep, 0), inst(0x0C, "XEP", imp, xep, 0), inst(0x0D, "ORA", abs, ora, 4), inst(0x0E, "ASL", abs, asl, 6), inst(0x0F, "XEP", imp, xep, 0),
	inst(0x10, "BPL", rel, bpl, 2), inst(0x11, "ORA", idy, ora, 5), inst(0x12, "XEP", imp, xep, 0), inst(0x13, "XEP", imp, xep, 0), inst(0x14, "XEP", imp, xep, 0), inst(0x15, "ORA", zpx, ora, 4), inst(0x16, "ASL", zpx, asl, 6), inst(0x17, "XEP", imp, xep, 0), inst(0x18, "CLC", imp, clc, 2), inst(0x19, "ORA", aby, ora, 4), inst(0x1A, "XEP", imp, xep, 0), inst(0x1B, "XEP", imp, xep, 0), inst(0x1C, "XEP", imp, xep, 0), inst(0x1D, "ORA", abx, ora, 4), inst(0x1E, "ASL", abx, asl, 7), inst(0x1F, "XEP", imp, xep, 0),
	inst(0x20, "JSR", abs, jsr, 6), inst(0x21, "AND", idx, and, 6), inst(0x22, "XEP", imp, xep, 0), inst(0x23, "XEP", imp, xep, 0), inst(0x24, "BIT", zp0, bit, 3), inst(0x25, "AND", zp0, and, 3), inst(0x26, "ROL", zp0, rol, 5), inst(0x27, "XEP", imp, xep, 0), inst(0x28, "PLP", imp, plp, 4), inst(0x29, "AND", imm, and, 2), inst(0x2A, "ROL", acc, rol, 2), inst(0x2B, "XEP", imp, xep, 0), inst(0x2C, "BIT", abs, bit, 4), inst(0x2D, "AND", abs, and, 4), inst(0x2E, "ROL", abs, rol, 6), inst(0x2F, "XEP", imp, xep, 0),
	inst(0x30, "BMI", rel, bmi, 2), inst(0x31, "AND", idy, and, 5), inst(0x32, "XEP", imp, xep, 0), inst(0x33, "XEP", imp, xep, 0), inst(0x34, "XEP", imp, xep, 0), inst(0x35, "AND", zpx, and, 4), inst(0x36, "ROL", zpx, rol, 6), inst(0x37, "XEP", imp, xep, 0), inst(0x38, "SEC", imp, sec, 2), inst(0x39, "AND", aby, and, 4), inst(0x3A, "XEP", imp, xep, 0), inst(0x3B, "XEP", imp, xep, 0), inst(0x3C, "XEP", imp, xep, 0), inst(0x3D, "AND", abx, and, 4), inst(0x3E, "ROL", abx, rol, 7), inst(0x3F, "XEP", imp, xep, 0),
	inst(0x40, "RTI", imp, rti, 6), inst(0x41, "EOR", idx, eor, 6), inst(0x42, "XEP", imp, xep, 0), inst(0x43, "XEP", imp, xep, 0), inst(0x44, "XEP", imp, xep, 0), inst(0x45, "EOR", zp0, eor, 3), inst(0x46, "LSR", zp0, lsr, 5), inst(0x47, "XEP", imp, xep, 0), inst(0x48, "PHA", imp, pha, 3), inst(0x49, "EOR", imm, eor, 2), inst(0x4A, "LSR", acc, lsr, 2), inst(0x4B, "XEP", imp, xep, 0), inst(0x4C, "JMP", abs, jmp, 3), inst(0x4D, "EOR", abs, eor, 4), inst(0x4E, "LSR", abs, lsr, 6), inst(0x4F, "XEP", imp, xep, 0),
	inst(0x50, "BVC", rel, bvc, 2), inst(0x51, "EOR", idy, eor, 5), inst(0x52, "XEP", imp, xep, 0), inst(0x53, "XEP", imp, xep, 0), inst(0x54, "XEP", imp, xep, 0), inst(0x55, "EOR", zpx, eor, 4), inst(0x56, "LSR", zpx, lsr, 6), inst(0x57, "XEP", imp, xep, 0), inst(0x58, "CLI", imp, cli, 2), inst(0x59, "EOR", aby, eor, 4), inst(0x5A, "XEP", imp, xep, 0), inst(0x5B, "XEP", imp, xep, 0), inst(0x5C, "XEP", imp, xep, 0), inst(0x5D, "EOR", abx, eor, 4), inst(0x5E, "LSR", abx, lsr, 7), inst(0x5F, "XEP", imp, xep, 0),
	inst(0x60, "RTS", imp, rts, 6), inst(0x61, "ADC", idx, adc, 6), inst(0x62, "XEP", imp, xep, 0), inst(0x63, "XEP", imp, xep, 0), inst(0x64, "XEP", imp, xep, 0), inst(0x65, "ADC", zp0, adc, 3), inst(0x66, "ROR", zp0, ror, 5), inst(0x67, "XEP", imp, xep, 0), inst(0x68, "PLA", imp, pla, 4), inst(0x69, "ADC", imm, adc, 2), inst(0x6A, "ROR", acc, ror, 2), inst(0x6B, "XEP", imp, xep, 0), inst(0x6C, "JMP", ind, jmp, 5), inst(0x6D, "ADC", abs, adc, 4), inst(0x6E, "ROR", abs, ror, 6), inst(0x6F, "XEP", imp, xep, 0),
	inst(0x70, "BVS", rel, bvs, 2), inst(0x71, "ADC", idy, adc, 5), inst(0x72, "XEP", imp, xep, 0), inst(0x73, "XEP", imp, xep, 0), inst(0x74, "XEP", imp, xep, 0), inst(0x75, "ADC", zpx, adc, 4), inst(0x76, "ROR", zpx, ror, 6), inst(0x77, "XEP", imp, xep, 0), inst(0x78, "SEI", imp, sei, 2), inst(0x79, "ADC", aby, adc, 4), inst(0x7A, "XEP", imp, xep, 0), inst(0x7B, "XEP", imp, xep, 0), inst(0x7C, "XEP", imp, xep, 0), inst(0x7D, "ADC", abx, adc, 4), inst(0x7E, "ROR", abx, ror, 7), inst(0x7F, "XEP", imp, xep, 0),
	inst(0x80, "XEP", imp, xep, 0), inst(0x81, "STA", idx, sta, 6), inst(0x82, "XEP", imp, xep, 0), inst(0x83, "XEP", imp, xep, 0), inst(0x84, "STY", zp0, sty, 3), inst(0x85, "STA", zp0, sta, 3), inst(0x86, "STX", zp0, stx, 3), inst(0x87, "XEP", imp, xep, 0), inst(0x88, "DEY", imp, dey, 2), inst(0x89, "XEP", imp, xep, 0), inst(0x8A, "TXA", imp, txa, 2), inst(0x8B, "XEP", imp, xep, 0), inst(0x8C, "STY", abs, sty, 4), inst(0x8D, "STA", abs, sta, 4), inst(0x8E, "STX", abs, stx, 4), inst(0x8F, "XEP", imp, xep, 0),
	inst(0x90, "BCC", rel, bcc, 2), inst(0x91, "STA", idy, sta, 6), inst(0x92, "XEP", imp, xep, 0), inst(0x93, "XEP", imp, xep, 0), inst(0x94, "STY", zpx, sty, 4), inst(0x95, "STA", zpx, sta, 4), inst(0x96, "STX", zpy, stx, 4), inst(0x97, "XEP", imp, xep, 0), inst(0x98, "TYA", imp, tya, 2), inst(0x99, "STA", aby, sta, 5), inst(0x9A, "TXS", imp, txs, 2), inst(0x9B, "XEP", imp, xep, 0), inst(0x9C, "XEP", imp, xep, 0), inst(0x9D, "STA", abx, sta, 5), inst(0x9E, "XEP", imp, xep, 0), inst(0x9F, "XEP", imp, xep, 0),
	inst(0xA0, "LDY", imm, ldy, 2), inst(0xA1, "LDA", idx, lda, 6), inst(0xA2, "LDX", imm, ldx, 2), inst(0xA3, "XEP", imp, xep, 0), inst(0xA4, "LDY", zp0, ldy, 3), inst(0xA5, "LDA", zp0, lda, 3), inst(0xA6, "LDX", zp0, ldx, 3), inst(0xA7, "XEP", imp, xep, 0), inst(0xA8, "TAY", imp, tay, 2), inst(0xA9, "LDA", imm, lda, 2), inst(0xAA, "TAX", imp, tax, 2), inst(0xAB, "XEP", imp, xep, 0), inst(0xAC, "LDY", abs, ldy, 4), inst(0xAD, "LDA", abs, lda, 4), inst(0xAE, "LDX", abs, ldx, 4), inst(0xAF, "XEP", imp, xep, 0),
	inst(0xB0, "BCS", rel, bcs, 2), inst(0xB1, "LDA", idy, lda, 5), inst(0xB2, "XEP", imp, xep, 0), inst(0xB3, "XEP", imp, xep, 0), inst(0xB4, "LDY", zpx, ldy, 4), inst(0xB5, "LDA", zpx, lda, 4), inst(0xB6, "LDX", zpy, ldx, 4), inst(0xB7, "XEP", imp, xep, 0), inst(0xB8, "CLV", imp, clv, 2), inst(0xB9, "LDA", aby, lda, 4), inst(0xBA, "TSX", imp, tsx, 2), inst(0xBB, "XEP", imp, xep, 0), inst(0xBC, "LDY", abx, ldy, 4), inst(0xBD, "LDA", abx, lda, 4), inst(0xBE, "LDX", aby, ldx, 4), inst(0xBF, "XEP", imp, xep, 0),
	inst(0xC0, "CPY", imm, cpy, 2), inst(0xC1, "CMP", idx, cmp, 6), inst(0xC2, "XEP", imp, xep, 0), inst(0xC3, "XEP", imp, xep, 0), inst(0xC4, "CPY", zp0, cpy, 3), inst(0xC5, "CMP", zp0, cmp, 3), inst(0xC6, "DEC", zp0, dec, 5), inst(0xC7, "XEP", imp, xep, 0), inst(0xC8, "INY", imp, iny, 2), inst(0xC9, "CMP", imm, cmp, 2), inst(0xCA, "DEX", imp, dex, 2), inst(0xCB, "XEP", imp, xep, 0), inst(0xCC, "CPY", abs, cpy, 4), inst(0xCD, "CMP", abs, cmp, 4), inst(0xCE, "DEC", abs, dec, 6), inst(0xCF, "XEP", imp, xep, 0),
	inst(0xD0, "BNE", rel, bne, 2), inst(0xD1, "CMP", idy, cmp, 5), inst(0xD2, "XEP", imp, xep, 0), inst(0xD3, "XEP", imp, xep, 0), inst(0xD4, "XEP", imp, xep, 0), inst(0xD5, "CMP", zpx, cmp, 4), inst(0xD6, "DEC", zpx, dec, 6), inst(0xD7, "XEP", imp, xep, 0), inst(0xD8, "CLD", imp, cld, 2), inst(0xD9, "CMP", aby, cmp, 4), inst(0xDA, "XEP", imp, xep, 0), inst(0xDB, "XEP", imp, xep, 0), inst(0xDC, "XEP", imp, xep, 0), inst(0xDD, "CMP", abx, cmp, 4), inst(0xDE, "DEC", abx, dec, 7), inst(0xDF, "XEP", imp, xep, 0),
	inst(0xE0, "CPX", imm, cpx, 2), inst(0xE1, "SBC", idx, sbc, 6), inst(0xE2, "XEP", imp, xep, 0), inst(0xE3, "XEP", imp, xep, 0), inst(0xE4, "CPX", zp0, cpx, 3), inst(0xE5, "SBC", zp0, sbc, 3), inst(0xE6, "INC", zp0, inc, 5), inst(0xE7, "XEP", imp, xep, 0), inst(0xE8, "INX", imp, inx, 2), inst(0xE9, "SBC", imm, sbc, 2), inst(0xEA, "NOP", imp, nop, 2), inst(0xEB, "XEP", imp, xep, 0), inst(0xEC, "CPX", abs, cpx, 4), inst(0xED, "SBC", abs, sbc, 4), inst(0xEE, "INC", abs, inc, 6), inst(0xEF, "XEP", imp, xep, 0),
	inst(0xF0, "BEQ", rel, beq, 2), inst(0xF1, "SBC", idy, sbc, 5), inst(0xF2, "XEP", imp, xep, 0), inst(0xF3, "XEP", imp, xep, 0), inst(0xF4, "XEP", imp, xep, 0), inst(0xF5, "SBC", zpx, sbc, 4), inst(0xF6, "INC", zpx, inc, 6), inst(0xF7, "XEP", imp, xep, 0), inst(0xF8, "SED", imp, sed, 2), inst(0xF9, "SBC", aby, sbc, 4), inst(0xFA, "XEP", imp, xep, 0), inst(0xFB, "XEP", imp, xep, 0), inst(0xFC, "XEP", imp, xep, 0), inst(0xFD, "SBC", abx, sbc, 4), inst(0xFE, "INC", abx, inc, 7), inst(0xFF, "XEP", imp, xep, 0),
}
